import{g as t,a as s}from"./index-5077b633.js";async function a(){console.log("Testing Hugging Face API connection...");try{const o=t(),r=s();if(!r)return console.error("❌ ERROR: API token not configured"),!1;const e=await fetch(o,{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({inputs:"A simple test image of a LEGO brick",parameters:{seed:42,guidance_scale:7.5,num_inference_steps:5}})});if(e.ok)return console.log("✅ SUCCESS: API connection works!"),console.log("Response status:",e.status),console.log("Response headers:",Object.fromEntries([...e.headers])),!0;{console.error("❌ ERROR: API connection failed"),console.error("Status:",e.status);const n=await e.text();return console.error("Error details:",n),!1}}catch(o){return console.error("❌ ERROR: Exception during API test"),console.error(o),!1}}async function i(){console.log("Checking models info endpoint...");try{const o=t(),r=s();if(!r)return console.error("❌ ERROR: API token not configured"),!1;const e=await fetch(o,{method:"GET",headers:{Authorization:`Bearer ${r}`}});if(e.ok){const n=await e.json();return console.log("✅ SUCCESS: Models endpoint works!"),console.log("Model info:",n),!0}else{console.error("❌ ERROR: Models endpoint failed"),console.error("Status:",e.status);const n=await e.text();return console.error("Error details:",n),!1}}catch(o){return console.error("❌ ERROR: Exception during models endpoint test"),console.error(o),!1}}export{i as checkModelsEndpoint,a as testHuggingFaceAPI};
